// v2.2
/*
v2.2

/* IMAGE SWAPPER
--------------------------------- */

//cssTrans = false;



// set up objects....
function hImageSwapper(wrapper, atype, contin, dir, unit, xml, h, w, per, timeD, aniStatus, spd, anivar, animate, showCont) {
	this.wrapper = wrapper;
	this.animationType = atype;	
	this.continious = contin;
	this.direction = dir;
	this.unit = unit;
	this.xmlurl = xml;
	this.wrapperHeight = h;
	this.wrapperWidth = w;
	this.perUnit  = per;
	this.timeDelay = timeD;
	this.animationSpeed = spd;
	this.animationStatus = aniStatus
	this.anivar = anivar;
	this.animate = animate;
	this.showControls = showCont;
	this.pad = 0;
	this.loadAttempts = 0;
}
function swapperSaveData(x,y,z,a,b) {
	this.img = x;
	this.clic = y;
	this.tar = z;
	this.wid = a;
	this.hei = b;
}
function swapperSaveSettings(x,y,h,w) {
	this.rotatespeed = x;
	this.imagepadding = y;
	this.h = h;
	this.w = w;
}

//functions -------

function getWidthOfSliderItems(x) {
	z= document.getElementById(x.wrapper+"-slider");
	w = 0;
	
 	if (x.perUnit==1) {
	  pad = x.pad
	} else {
	 pad = 0;
	}
	for (i=0; i<z.getElementsByTagName("li").length; i++){
		w+=parseInt(z.getElementsByTagName("li")[i].offsetWidth)+parseInt(pad);
	}
	return parseInt(w);	
}

function getCurrentSliderItem(slider) {
	z = document.getElementById(slider+"-slider");
	offSet = 0;
	curItem = 0;
	
	for (i=0;i<z.getElementsByTagName("li").length;i++) {
		if ((parseInt(z.style.left)*-1) == (z.getElementsByTagName("li")[i].offsetWidth + offSet)) {
			curItem = i;
		} 
		offSet += z.getElementsByTagName("li")[i].offsetWidth;
	}

	return curItem;
	
}

function getSliderItemWidths(slider) {
	z = document.getElementById(slider+"-slider");
	ew = [];
	for (i=0;i<z.getElementsByTagName("li").length;i++) {
		ew[i] = z.getElementsByTagName("li")[i].offsetWidth;
	}
	return ew;
}

function setforFade(slider) {
	z = document.getElementById(slider+"-slider").getElementsByTagName("li");	
	for (i=0; i < z.length ; i++) {
		cssTransObj(z[i], "");
		z[i].style.display = "block";
		z[i].style.position = "absolute";
		z[i].style.left = "0px";
		z[i].style.top = "0px";
		z[i].style.zIndex = z.length+10-i;
		z[i].style.opacity = "0";
		z[i].style.filter = "alpha(opacity=0)";
	}
}


// main movement call
function swapperMove(sl, xt) {

	clearTimeout(sl.anivar);
	
	var x = xt*sl.direction; 
	var a = sl.wrapper;
	var s = sl.animationSpeed;
	var t = sl.animationType;
	var c = sl.continious;
	var u = sl.unit;
	var pad = 0;
	
	if (sl.animationStatus == 'undefined') { sl.animationStatus = 0; }
	if (sl.animationStatus == 1) { return; } 

	var as = document.getElementById(sl.wrapper+"-slider");
	
	
	if (!as.style.width) { as.style.width = as.offsetWidth + "px"; }
	if (!as.style.left) { as.style.left = "0px"; }
	
	var aels = as.getElementsByTagName("li"); // variable gets overridden when the function is called for multiple items for some reason
	var asl = as.getElementsByTagName("li").length;
	
	if ((asl <= 1)) { return; }
	
	var eWidths = [];
	var currentItem = 0;
	var itemsWidth = 0;
	
	for (i=0; i<asl; i++){
		itemsWidth+=parseInt(aels[i].offsetWidth);
		eWidths[i] = aels[i].offsetWidth;

		if (parseInt(as.style.left)==0 && i==0) { 
			currentItem = i; 
			}
		else {
			if (itemsWidth + parseInt(as.style.left) == 0) {
				currentItem = i;
			}
		}

	}
	
	//document.getElementById(sl.wrapper).style.width = parseInt(getWidthOfSliderItems(sl)) + "px";

	// ######################################################################
	if (t=='fade') { // Fading Action
	// ######################################################################

		if (sl.animationStatus == 1) { return; } 
		sl.animationStatus = 1;

		setforFade(sl.wrapper);

		if (x>0) { // FADE 1  (top fades out, next lower layer in)	
			
			tmpEls = as.getElementsByTagName("li");
			tmpEls[0].style.opacity = "1";
			tmpEls[0].style.filter = 'alpha(opacity=100)';
			tmpEls[1].style.opacity = "0";
			tmpEls[1].style.filter = 'alpha(opacity=0)';
			
			//function endFadeRight() {
			var listenerFR = function (event) {
				tmpEls = as.getElementsByTagName("li");
				
				if (cssTrans) { 
				tmpEls[0].removeEventListener("webkitTransitionEnd", listenerFR, false);
				tmpEls[0].removeEventListener("transitionend", listenerFR, false);
				tmpEls[0].removeEventListener("oTransitionEnd", listenerFR, false);
				}
				
				tmpEls[0].style.zIndex = 10;
				cloned = tmpEls[0].cloneNode(true);
				as.appendChild(cloned);
				as.removeChild(tmpEls[0]);
				for (i=1;i<asl;i++) {
					tmpEls[i].style.display = "none"; //webkit fix
				}
				sl.animationStatus = 0; 
				if (window.attachEvent) { //quick check for IE...
					tmpEls[0].style.removeAttribute("filter");
				}
			}
	
			if (sl.animate==1) {
				if (cssTrans) {  //css transition
				
					setTimeout(function(){
								tmpEls = as.getElementsByTagName("li");

								cssTransObj(tmpEls[0], "opacity "+parseInt(parseInt(s)/0.06)+"ms ease-in-out");
								tmpEls[0].style.opacity = "0";
							
								cssTransObj(tmpEls[1], "opacity "+parseInt(parseInt(s)/0.06)+"ms ease-in-out");
								tmpEls[1].style.opacity = "1";
							
								tmpEls[0].addEventListener("webkitTransitionEnd", listenerFR, false);
								tmpEls[0].addEventListener("transitionend", listenerFR, false);
								tmpEls[0].addEventListener("oTransitionEnd", listenerFR, false)
							
						}, 0);
					
				} else { //javascript animation 
			
					midoriFX.fadeOut(aels[0].getAttribute("id"), s, 0);		
					midoriFX.fadeIn(aels[1].getAttribute("id"), s, 1, listenerFR);
				
				}
			} else {
				
				tmpEls = as.getElementsByTagName("li");
				tmpEls[0].style.opacity = "0";
				tmpEls[1].style.opacity = "1";
				setTimeout(listenerFR, 10);
				
			}
		
		} else { // FADE -1 (bottom layer moves to top and fades in while old top layer fades out)	
			
			
			tmpEls = as.getElementsByTagName("li");	
			tmpEls[tmpEls.length-1].style.opacity = "0";
			tmpEls[tmpEls.length-1].style.filter = 'alpha(opacity=0)';
						
			tmpEls[tmpEls.length-1].style.zIndex = "20";
			
			tmpEls[0].style.zIndex = "10";
			tmpEls[0].style.opacity = "1";
			tmpEls[0].style.filter = 'alpha(opacity=100)';
			
			//function endFade() {
			var listenerFL = function (event) {
				tmpEls = as.getElementsByTagName("li");
				
				if (cssTrans) { 
				tmpEls[tmpEls.length-1].removeEventListener("webkitTransitionEnd", listenerFL, false);
				tmpEls[tmpEls.length-1].removeEventListener("transitionend", listenerFL, false);
				tmpEls[tmpEls.length-1].removeEventListener("oTransitionEnd", listenerFL, false);
				}
				
				cloned = tmpEls[tmpEls.length-1].cloneNode(true);
				as.insertBefore(cloned, tmpEls[0]);
				as.removeChild(tmpEls[tmpEls.length-1]);
				
				sl.animationStatus = 0; 				
			}
			
			if (sl.animate==1) {
			
				if (cssTrans) {  //css transition
				
					setTimeout(function(){ 		
						tmpEls = as.getElementsByTagName("li");
						
						tmpEls[0].style.opacity = "0";
						tmpEls[tmpEls.length-1].style.opacity = "1";
						
						// -------------

						cssTransObj(tmpEls[tmpEls.length-1], "opacity "+parseInt(parseInt(s)/0.06)+"ms ease-in-out");
						tmpEls[tmpEls.length-1].style.opacity = "1";
					
						cssTransObj(tmpEls[0], "opacity "+parseInt(parseInt(s)/0.06)+"ms ease-in-out");
						tmpEls[0].style.opacity = "0";
						
						tmpEls[tmpEls.length-1].addEventListener("webkitTransitionEnd", listenerFL, false);
						tmpEls[tmpEls.length-1].addEventListener("transitionend", listenerFL, false);
						tmpEls[tmpEls.length-1].addEventListener("oTransitionEnd", listenerFL, false);
					
					},0);
				
				} else { //javascript animation
					tmpEls = as.getElementsByTagName("li");
					midoriFX.fadeOut(tmpEls[0].getAttribute("id"), s, 0);			
					midoriFX.fadeIn(tmpEls[tmpEls.length-1].getAttribute("id"), s, 1, listenerFL);
				
				}
			} else {
					tmpEls = as.getElementsByTagName("li");
					tmpEls[tmpEls.length-1].style.opacity = "1";
					tmpEls[0].style.opacity = "0";
					setTimeout(listenerFL, 10);
			}
	
		}		//end fade left/up	


	// ######################################################################
	} else if (t=='slide') { // Sliding Action
	// ######################################################################

		if (sl.animationStatus == 1) { return; } 
		sl.animationStatus = 1;

		ap = as.parentNode;
		if (getWidthOfSliderItems(sl) < ap.offsetWidth) { return; }
		
		//get the padding
		pad = parseInt(sl.pad);
		if (sl.perUnit > 1) { pad = parseInt(0); }

		xw = parseInt(ap.offsetWidth);
		
		

		// ----------------------------------------------------------------------
		if (x>0) {	 //SLIDE -1	[ direction ---------> ]
		// ----------------------------------------------------------------------

			y = parseInt(as.getElementsByTagName("li")[0].offsetWidth);	
			i = 0;

			if (c==1){
				//continious loop
				
				if (u=='whole') {	
		
					var q = 0;

					while (y <= xw) {
						cl = as.getElementsByTagName("li")[q].cloneNode(true);
						as.appendChild(cl);
						as.style.width = getWidthOfSliderItems(sl) + "px";
						y= y+ parseInt(as.getElementsByTagName("li")[q].offsetWidth);
						q++;
					}

					//function endRightConWhole(a, tmpE) { 
					var listenerRCW = function(event) {
							if (cssTrans) { 
							as.removeEventListener("webkitTransitionEnd", listenerRCW, false);
							as.removeEventListener("transitionend", listenerRCW, false);
							as.removeEventListener("oTransitionEnd", listenerRCW, false);
							}

							cssTransObj(as, "");
							as.style.left = "0px";
							for (d=0;d<q;d++) {
								as.removeChild(as.getElementsByTagName("li")[0]);
							}
							sl.animationStatus = 0;
					}
				
					
					if (sl.animate==1)
					{	
						if (cssTrans) {  //css transition
								tmpE = document.getElementById(a+"-slider");
								cssTransObj(tmpE, "left "+parseInt((1/parseInt(s))*15000)+"ms ease-in-out");
								tmpE.style.left = parseInt(tmpE.style.left) + ((xw*-1*x)+parseInt(pad)) +"px";
						
								
								tmpE.addEventListener("webkitTransitionEnd", listenerRCW, false);
								tmpE.addEventListener("transitionend", listenerRCW, false);
								tmpE.addEventListener("oTransitionEnd", listenerRCW, false);
						

						} else { //javascript animation 
							midoriFX.slide(a+"-slider", ((xw)*-1*x+parseInt(pad)), s, listenerRCW);
						}	
						
					} else {
						
						document.getElementById(a+"-slider").style.left = parseInt(document.getElementById(a+"-slider").style.left) - ((xw)*-1*x) + "px";
						setTimeout(listenerRCW,10);
					}
				
						
				} else {  //each

							tmpEls = as.getElementsByTagName("li");
								cloned = tmpEls[i].cloneNode(true);
								as.style.width = parseInt(as.style.width) + parseInt(tmpEls[i].offsetWidth) + "px"; //make room for the new element
								as.appendChild(cloned);
								y += parseInt(tmpEls[i].offsetWidth);
							
							//function endRightContEach() { 
							var listenerRCE = function(event) {
									if (cssTrans) { 
									as.removeEventListener("webkitTransitionEnd", listenerRCE, false);
									as.removeEventListener("transitionend", listenerRCE, false);
									as.removeEventListener("oTransitionEnd", listenerRCE, false);	
									}						
									cssTransObj(as, "");
								
									tmpEls = as.getElementsByTagName("li");	
										tmp = tmpEls[0].offsetWidth;
										as.style.left = parseInt(as.style.left) + tmp+parseInt(pad) + "px";
										as.removeChild(tmpEls[0]);
										as.style.width = parseInt(as.style.width) - tmp +"px";
									sl.animationStatus = 0;	
								}	
							
									
							if (sl.animate==1)
							{	
								if (cssTrans) {  //css transition
				
									tmpE = document.getElementById(a+"-slider");
									cssTransObj(tmpE, "left "+parseInt((1/parseInt(s))*15000)+"ms ease-in-out");
									tmpE.style.left = parseInt(tmpE.style.left) + ((parseInt(getSliderItemWidths(sl.wrapper)[getCurrentSliderItem(sl.wrapper)])*-1*x))-parseInt(pad) +"px";
			
									tmpE.addEventListener("webkitTransitionEnd", listenerRCE, false);
									tmpE.addEventListener("transitionend", listenerRCE, false);
									tmpE.addEventListener("oTransitionEnd", listenerRCE, false); 

								} else { //javascript animation	
									midoriFX.slide(a+"-slider", ((parseInt(getSliderItemWidths(sl.wrapper)[getCurrentSliderItem(sl.wrapper)])*-1*x)-parseInt(pad)), s, listenerRCE);
								}
							} else {
								document.getElementById(a+"-slider").style.left = parseInt(document.getElementById(a+"-slider").style.left) + ((parseInt(getSliderItemWidths(sl.wrapper)[getCurrentSliderItem(sl.wrapper)])*-1*x)-parseInt(pad)) + "px";
								setTimeout(listenerRCE,10);
							}
					
				}
		

			} else {	//non-continious loop-------------------------------
				
				as.style.width = getWidthOfSliderItems(sl) + "px";
				
				if (u=='whole') { // non-con whole 	 -------------------------------
					
					if ((parseInt(as.style.width) + parseInt(as.style.left)) - as.getElementsByTagName("li").length > parseInt(document.getElementById(a).style.width)) { 
						
		
						
						if (sl.animate==1)
						{
							if (cssTrans) { // css transitions / non-con whole -------------------------------
								
									var listenerRNCW = function(event) {
											if (cssTrans) { 
											as.removeEventListener("webkitTransitionEnd", listenerRNCW, false);
											as.removeEventListener("transitionend", listenerRNCW, false);
											as.removeEventListener("oTransitionEnd", listenerRNCW, false);
											}
											sl.animationStatus = 0;
									}
							
									tmpE = document.getElementById(sl.wrapper+"-slider");	
									cssTransObj(tmpE, "left "+parseInt((1/parseInt(s))*15000)+"ms ease-in-out");
									tmpE.style.left = parseInt(tmpE.style.left) + ((xw*-1*x)-parseInt(pad)) +"px";
									
									tmpE.addEventListener("webkitTransitionEnd", listenerRNCW, false);
									tmpE.addEventListener("transitionend", listenerRNCW, false);
									tmpE.addEventListener("oTransitionEnd", listenerRNCW, false);
							
							} else { //javascript animation / non-con whole -------------------------------
								midoriFX.slide(a+"-slider", ((xw*-1*x)+parseInt(pad)), s, function(){ sl.animationStatus = 0;});
							}
						} else {
							document.getElementById(a+"-slider").style.left = parseInt(document.getElementById(a+"-slider").style.left) + ((xw*-1*x)+parseInt(pad)) + "px";
							sl.animationStatus = 0; 
						}
							
					} else { sl.animationStatus = 0; }
					

				} else { //non-con each -------------------------------
				
					as.style.width = getWidthOfSliderItems(sl) + "px";
					
					if ((parseInt(as.style.width) + parseInt(as.style.left)) > parseInt(document.getElementById(a).style.width)) { 
						
						if (sl.animate==1)
						{
							if (cssTrans) { // css transitions / non-con each -------------------------------
								
								var listenerRNCE = function(event) {
										if (cssTrans) { 
										as.removeEventListener("webkitTransitionEnd", listenerRNCE, false);
										as.removeEventListener("transitionend", listenerRNCE, false);
										as.removeEventListener("oTransitionEnd", listenerRNCE, false);
										}
										sl.animationStatus = 0;
								}
							
								tmpE = document.getElementById(a+"-slider");
								cssTransObj(tmpE, "left "+parseInt((1/parseInt(s))*15000)+"ms ease-in-out");
								tmpE.style.left = parseInt(tmpE.style.left) + ((eWidths[currentItem+1]*-1*x)-pad) +"px";
								
								tmpE.addEventListener("webkitTransitionEnd", listenerRNCE, false);
								tmpE.addEventListener("transitionend", listenerRNCE, false);
								tmpE.addEventListener("oTransitionEnd", listenerRNCE, false);
							
							} else { //javascript animation / non-con each -------------------------------
								midoriFX.slide(a+"-slider", ((eWidths[currentItem+1]*-1*x))-pad, s, function(){ sl.animationStatus = 0;});
							}
						} else {
							document.getElementById(a+"-slider").style.left = parseInt(document.getElementById(a+"-slider").style.left) - pad + ((eWidths[currentItem+1]*-1*x)) + "px";
							sl.animationStatus = 0; 
						}

					} else {sl.animationStatus = 0; }

	

				} //end non-con each
				
			} // end non-con 
			

		// ----------------------------------------------------------------------
		} else { //SLIDE 1 [ <--------- direction ]
		// ----------------------------------------------------------------------
				
			i=1;
			
			y = parseInt(as.getElementsByTagName("li")[as.getElementsByTagName("li").length-1].offsetWidth);	

			if (c==1) {
				//continious loop
				
				if (u=='whole') { //continious - whole -------------------------------
			
					var q = 0;
					cssTransObj(as, "");
					
					while (y <= xw) {
						cl = as.getElementsByTagName("li")[as.getElementsByTagName("li").length-1-q].cloneNode(true);
						
						as.style.left = parseInt(as.style.left) - (parseInt(as.getElementsByTagName("li")[q].offsetWidth)+parseInt(pad))+  "px";
						as.style.width = getWidthOfSliderItems(sl) + "px";
						
						as.insertBefore(cl, as.getElementsByTagName("li")[0]);
			
						y= y+ parseInt(as.getElementsByTagName("li")[q].offsetWidth);
						q++;
					}
					
					//function endLeftConWhole(a) { 
					var listenerLCW = function(event) {
							if (cssTrans) { 
							as.removeEventListener("webkitTransitionEnd", listenerLCW, false);
							as.removeEventListener("transitionend", listenerLCW, false);
							as.removeEventListener("oTransitionEnd", listenerLCW, false);
							}
							cssTransObj(as, "");
							as.style.left = "0px";
							for (d=0;d<q;d++) {
								as.removeChild(as.getElementsByTagName("li")[as.getElementsByTagName("li").length-1]);
							}
							sl.animationStatus = 0;
						}
				
	
					if (sl.animate==1)
					{
								
						if (cssTrans) {  //css transition
							
								as.style.width = getWidthOfSliderItems(sl) + "px";
								tmpE = document.getElementById(a+"-slider");
								cssTransObj(tmpE, "left "+parseInt((1/parseInt(s))*15000)+"ms ease-in-out");
				
								tmpE.style.left = parseInt(tmpE.style.left) + ((xw*-1*x))-parseInt(pad) +"px";
							
								tmpE.addEventListener("webkitTransitionEnd", listenerLCW, false);
								tmpE.addEventListener("transitionend", listenerLCW, false);
								tmpE.addEventListener("oTransitionEnd", listenerLCW, false);


						} else { //javascript animation 

							midoriFX.slide(a+"-slider", ((xw)*-1*x-parseInt(pad)), s, listenerLCW);
						}
						
					} else {
				
						tmpE = document.getElementById(a+"-slider");
						tmpE.style.left = parseInt(tmpE.style.left) + ((xw*-1*x)-parseInt(pad)) +"px";
						setTimeout(listenerLCW,10); 
					
					}	


				} else { // continious - each  -------------------------------

					tmpEls = as.getElementsByTagName("li");
					as.style.left = (parseInt(as.style.left) - parseInt(tmpEls[asl-1].offsetWidth))-parseInt(pad) + "px";
					cloned = tmpEls[asl-1].cloneNode(true);
					as.style.width = parseInt(as.style.width) + parseInt(tmpEls[asl-1].offsetWidth) + "px"; //make room for the new element
					as.insertBefore(cloned, aels[0]);	
					y += parseInt(tmpEls[asl-1].offsetWidth);
						
					//function endLeftContEach() { 	
					var listenerLCE = function(event) {
							if (cssTrans) { 
							as.removeEventListener("webkitTransitionEnd", listenerLCE, false);
							as.removeEventListener("transitionend", listenerLCE, false);
							as.removeEventListener("oTransitionEnd", listenerLCE, false);
							}		
						t = document.getElementById(sl.wrapper+"-slider");
						cssTransObj(t, "");
						tmpEls = t.getElementsByTagName("li");	  		
						l = tmpEls.length-1;
						t.style.width = parseInt(t.style.width) - parseInt(tmpEls[l].offsetWidth) + "px";
						t.removeChild(tmpEls[l]);
						sl.animationStatus = 0;
					}
					
					if (sl.animate==1)
					{
						
						if (cssTrans) {  //css transition / con - each -------------------------------

							tmpE = document.getElementById(sl.wrapper+"-slider");
							cssTransObj(tmpE, "left "+parseInt((1/parseInt(s))*15000)+"ms ease-in-out");
							tmpE.style.left = parseInt(tmpE.style.left) + (parseInt(getSliderItemWidths(sl.wrapper)[getCurrentSliderItem(sl.wrapper)])*-1*x)+parseInt(pad) +"px";
							
							tmpE.addEventListener("webkitTransitionEnd", listenerLCE, false);
							tmpE.addEventListener("transitionend", listenerLCE, false);
							tmpE.addEventListener("oTransitionEnd", listenerLCE, false);
		
							
	
						} else { //javascript animation	/ con - each -------------------------------
							midoriFX.slide(sl.wrapper+"-slider", ((getSliderItemWidths(sl.wrapper)[getCurrentSliderItem(sl.wrapper)]*-1*x))+parseInt(pad), s, listenerLCE);
						}
					} else {
						tmpE = document.getElementById(sl.wrapper+"-slider");
						tmpE.style.left = parseInt(tmpE.style.left) + (parseInt(getSliderItemWidths(sl.wrapper)[getCurrentSliderItem(sl.wrapper)])*-1*x)+parseInt(pad) +"px";
						setTimeout(listenerLCE,10);
					}

				} // end con each
			

			} else { //non-continious loop -------------------------------

				if (u=='whole') { // non-con whole -------------------------------

					if (parseInt(as.style.left) < 0) {
						
						if (sl.animate==1)
						{
							if (cssTrans) { // css transitions / non-con whole -------------------------------
							
								var listenerLNCW = function(event) {
										if (cssTrans) { 
										as.removeEventListener("webkitTransitionEnd", listenerLNCW, false);
										as.removeEventListener("transitionend", listenerLNCW, false);
										as.removeEventListener("oTransitionEnd", listenerLNCW, false);
										}
										sl.animationStatus = 0;
								}
							
								tmpE = document.getElementById(a+"-slider");
								cssTransObj(tmpE, "left "+parseInt((1/parseInt(s))*15000)+"ms ease-in-out");
								tmpE.style.left = parseInt(tmpE.style.left) + ((xw*-1*x)-pad) +"px";
							
								tmpE.addEventListener("webkitTransitionEnd", listenerLNCW, false);
								tmpE.addEventListener("transitionend", listenerLNCW, false);
								tmpE.addEventListener("oTransitionEnd", listenerLNCW, false);
							
							
							} else { //javascript animation / non-con whole -------------------------------
								midoriFX.slide(a+"-slider", ((xw*-1*x)-pad), s, function(){ sl.animationStatus = 0;});
	
							}
						} else {
							document.getElementById(a+"-slider").style.left = parseInt(document.getElementById(a+"-slider").style.left) +((eWidths[currentItem]*-1*x))+pad + "px";
							sl.animationStatus = 0;
						}
						
						
					} else { sl.animationStatus = 0; }

				} else { // non-con each -------------------------------
						
					if (parseInt(as.style.left) < 0) {
						
						if (sl.animate==1)
						{
						
							if (cssTrans) { // css transitions / non-con each -------------------------------
							
								var listenerLNCE = function(event) {
										if (cssTrans) { 
										as.removeEventListener("webkitTransitionEnd", listenerLNCE, false);
										as.removeEventListener("transitionend", listenerLNCE, false);
										as.removeEventListener("oTransitionEnd", listenerLNCE, false);
										}
										sl.animationStatus = 0;
								}
							
								tmpE = document.getElementById(a+"-slider");
								cssTransObj(tmpE, "left "+parseInt((1/parseInt(s))*15000)+"ms ease-in-out");
								tmpE.style.left = parseInt(tmpE.style.left) + ((eWidths[currentItem]*-1*x))+pad + "px";

								tmpE.addEventListener("webkitTransitionEnd", listenerLNCE, false);
								tmpE.addEventListener("transitionend", listenerLNCE, false);
								tmpE.addEventListener("oTransitionEnd", listenerLNCE, false);
							
							} else { //javascript animation / non-con each -------------------------------
								midoriFX.slide(a+"-slider", ((eWidths[currentItem]*-1*x))+pad, s, function(){  sl.animationStatus = 0; });
							}
						} else {
							document.getElementById(a+"-slider").style.left = parseInt(document.getElementById(a+"-slider").style.left) +((eWidths[currentItem]*-1*x))+pad + "px";
							sl.animationStatus = 0;
						}

					} else {sl.animationStatus = 0; }

					
				} // end non-con each	

			} //end non-continious

		} // end left	

	// ######################################################################	
	} //end slide
	// ######################################################################

	if (sl.timeDelay > 0) {
		sl.anivar = setTimeout(function(){ swapperMove(sl, 1); }, sl.timeDelay);
	}
	
} //end moveswapper


// *********************************************************************************************************************************

//set up a swapper from an XML response...
function loadSwapper(xr, sl) {


	slider = sl.wrapper;
	hisheight = sl.wrapperHeight;
	hiswidth = sl.wrapperWidth;
	hiPerBox = sl.perUnit;
	hisdelay = sl.timeDelay;

	var darray = new Array();
	var sp = document.getElementById(slider); 
	var spwrapper = document.getElementById(slider+"-wrapper"); 
	sp.style.width = hiswidth+"px";
	sp.style.height = hisheight+"px";
	sp.style.overflow = "hidden";
	var s = document.getElementById(slider+"-slider");
	s.style.height = hisheight+"px";
	s.style.left = "0px";
	
	
	//build buttons
	
	if (sl.showControls==1) {
	
		bdr = document.createElement("div");
		bdr.className = 'imgswap-button-right';
		lkr = document.createElement('a');
		lkr.innerHTML = "&gt;";
		bdr.appendChild(lkr);
		spwrapper.appendChild(bdr);

		bdl = document.createElement("div");
		bdl.className = 'imgswap-button-left';
		lkl = document.createElement('a');
		lkl.innerHTML = "&lt;";
		bdl.appendChild(lkl);
		spwrapper.appendChild(bdl);

		if (lkr.addEventListener){
			lkr.addEventListener("click", function(){ swapperMove(sl, 1); }, false);
			lkl.addEventListener("click", function(){ swapperMove(sl, -1); }, false);
		} else if (lkr.attachEvent){
		  	lkr.attachEvent("onclick", function(){ swapperMove(sl, 1); });
			lkl.attachEvent("onclick", function(){ swapperMove(sl, -1); });
		}	
	}
	
	
	//put items from XML into an array
	
	howManyElements = xr.getElementsByTagName('image').length;
	swapperStore(xr);
	
	function swapperStore(xr) {
		if (xr.getElementsByTagName('image').length > 0 && xr.getElementsByTagName('images')) {	
			st = xr.getElementsByTagName('images')[0].attributes;
			if (st.getNamedItem("secondsToRotate")) {  
				hRot = st.getNamedItem("secondsToRotate").value;
			} else { hRot = "0"; }
			if (st.getNamedItem("imgPadding")) {  
				hPad = st.getNamedItem("imgPadding").value;
				sl.pad = hPad;
			} else { hPad = "0"; }
			if (st.getNamedItem("imgHeight")) {  
				hHeight= st.getNamedItem("imgHeight").value;
			} else { hHeight = "0"; }	
			if (st.getNamedItem("imgWidth")) {  
				hWidth= st.getNamedItem("imgWidth").value;
			} else { hWidth = "0"; }
			
			
			darray[0] = new swapperSaveSettings(hRot,hPad,hHeight,hWidth);	
			nodes=xr.getElementsByTagName('image');	
			for ( i = 1 ; i <= nodes.length ; i++ ) {	
				x=xr.getElementsByTagName("image")[i-1].attributes; // i-1 because of storing settings in the zero location
				if (x.getNamedItem("url")) {  
					hImg = x.getNamedItem("url").value;
				} else { hImg = "-"; }
				if (x.getNamedItem("click")) {  
					hClick = x.getNamedItem("click").value;
				} else { hClick = "-"; }
				if (x.getNamedItem("target")) {  
					hTarget = x.getNamedItem("target").value;
				} else { hTarget = "_self"; }
				
				if (x.getNamedItem("width")) {  
					hWi = x.getNamedItem("width").value;
				} else { hWi = "0"; }	
				
				if (x.getNamedItem("height")) {  
					hHei = x.getNamedItem("height").value;
				} else { hHei = "0"; }
						
				darray[i] = new swapperSaveData(hImg,hClick,hTarget,hWi,hHei);
			}
			createItems();			
		} else { return; }	
	} // swapperStore


	//create the HTML for single items and groups of items
	
	function createItems() {
		widthOfSlider = 0;
		boxesNeeded = Math.ceil(parseInt(darray.length-1) / hiPerBox);
		lastID = 0;
		for ( i = 1 ; i <= boxesNeeded ; i++ ) {
			ne = document.createElement("li");
			ne.style.cssFloat = "left";	
			ne.style.backgroundColor = 'transparent';
			ne.style.styleFloat = "left";
		//	if (darray[0].w> 0) { ne.style.width = darray[0].w; }
			ne.setAttribute("id", slider+"-"+i);
			
			if (hiPerBox==1) {
				ne.style.marginLeft = darray[0].imagepadding+"px"	
			}
			
			s.appendChild(ne);
			if (hiPerBox>1) {
				//more than 1 per box
	
				ne.style.width=hiswidth+"px";
				for ( j = 1; j <= hiPerBox ; j++ ) {
					
					if (darray[lastID+1]) {	//multiple with an AD
						
						 if (darray[lastID+1].img.search("doubleclick") > 0) {
							tf = document.createElement("span");
							tf.style.backgroundColor = 'transparent';
							tf.style.display = "block";
							//if (darray[0].w>0) { tf.style.width=darray[0].w+"px"; }
							//if (darray[0].h>0) { tf.style.height=darray[0].h+"px"; }
							tf.style.position = "relative";
							tf.style.marginLeft = darray[0].imagepadding+"px";
							tf.style.overflow = 'hidden';
							tf.style.marginTop = '0px';
							tf.style.marginBottom = '0px';
							tf.style.cssFloat = "left";
							tf.style.styleFloat = "left";
							
							adUrl = darray[lastID+1].img.replace(/\/adj\//, "\/adi\/");    
                            adUrl = adUrl.replace(/\/adx\//, "\/adi\/");  
                            //adRegex = new RegExp(/[0-9]+[x][0-9]+/);
                            //adSz = adUrl.match(adRegex).toString();
                            //adSz = adSz.split('x');
                              
                            ifrm = document.createElement("iframe");
                            ifrm.setAttribute('frameBorder', '0');
                            ifrm.setAttribute('src', adUrl + "ord=" + Math.random()*10000000000000000 + ";");
                            //ifrm.setAttribute('height', adSz[1]);
                            //ifrm.setAttribute('width', adSz[0]);
                            ifrm.setAttribute('height', darray[lastID+1].hei);
                            ifrm.setAttribute('width', darray[lastID+1].wid);
                            ifrm.setAttribute('scrolling', 'no');
                            
                            tf.appendChild(ifrm);
                            
							ne.appendChild(tf);
							
						} else { //muiltiple with NO AD
							
							tf = document.createElement("span");
							tf.style.backgroundColor = 'transparent';
							tf.style.display = "block";
							tf.style.marginLeft = darray[0].imagepadding+"px";
							tf.style.cssFloat = "left";
							tf.style.styleFloat = "left";
							ne.appendChild(tf);
			
							nl = document.createElement("a");
							if (darray[lastID+1].clic.substring(0,11) =='javascript:') {
								nl.setAttribute("onclick", darray[lastID+1].clic);
								nl.setAttribute("href", '#');
							} else {
							 	if (darray[lastID+1].clic == '-') {
							 	    nl.setAttribute("onclick", "return false;");
            						nl.setAttribute("href", '#');
            					 	 
            					} else {
        					 	    nl.setAttribute("href", darray[lastID+1].clic);
        				 	    }
							}
							//nl.setAttribute("href", darray[lastID+1].clic);
							nl.setAttribute("target", darray[lastID+1].tar);
							nl.style.display = 'block';
							nl.style.padding = '0px';
							nl.style.margin = '0px';
							if (darray[0].h>0) { nl.style.height=darray[0].h+"px"; }
							tf.appendChild(nl);	
					
							ni = document.createElement("img");
							ni.setAttribute("style", "margin: 0px; padding:0px;");
							ni.setAttribute("src", darray[lastID+1].img);
							nl.appendChild(ni);
								
						}
						lastID++;	
					}
				}
			} else {
				//1 per box

				 if (darray[i].img.search("doubleclick") > 0) { //singles with an AD
					
					tf = document.createElement("span");
					tf.style.display = "block";
					//tf.style.marginLeft = darray[0].imagepadding+"px"; //---
					tf.position = "relative";
					tf.style.backgroundColor = 'transparent';
					tf.style.cssFloat = "left";
					tf.style.styleFloat = "left";
					tf.style.overflow = 'hidden';
					
					adUrl = darray[i].img.replace(/\/adj\//, "\/adi\/");    
                    adUrl = adUrl.replace(/\/adx\//, "\/adi\/");  
                    //adRegex = new RegExp(/[0-9]+[x][0-9]+/);
                    //adSz = adUrl.match(adRegex).toString();
                    //adSz = adSz.split('x');
                      
                    ifrm = document.createElement("iframe");
                    ifrm.setAttribute('frameBorder', '0');
                    ifrm.setAttribute('src', adUrl + "ord=" + Math.random()*10000000000000000 + ";");
                    //ifrm.setAttribute('height', adSz[1]);
                    //ifrm.setAttribute('width', adSz[0]);
                    ifrm.setAttribute('height', darray[i].hei);
                    ifrm.setAttribute('width', darray[i].wid);
                    ifrm.setAttribute('scrolling', 'no');
                    
                    tf.appendChild(ifrm);
					
					ne.appendChild(tf);
					
					
				} else { //singles with NO AD
					 
					tf = document.createElement("span");
				//	tf.style.marginLeft = darray[0].imagepadding+"px"; //---
					tf.style.display = "block";
					tf.style.backgroundColor = 'transparent';
					tf.style.cssFloat = "left";
					tf.style.styleFloat = "left";
					ne.appendChild(tf);
					nl = document.createElement("a");
					nl.style.display = 'block';
					nl.style.padding = '0px';
					nl.style.margin = '0px';
					if (darray[i].clic.substring(0,11) =='javascript:') {
						nl.setAttribute("onclick", darray[i].clic);
						nl.setAttribute("href", '#');
					} else {
                        if (darray[i].clic == '-') {
                            nl.setAttribute("onclick", "return false;");
                            nl.setAttribute("href", '#');
                            
                        } else {
                            nl.setAttribute("href", darray[i].clic); 
                        }
					}
					
					nl.setAttribute("target", darray[i].tar);
					tf.appendChild(nl);		
					ni = document.createElement("img");
					ni.setAttribute("src", darray[i].img);
					nl.appendChild(ni);
				}	
			}
		widthOfSlider += parseInt(document.getElementById(slider+"-"+i).offsetWidth);	
		}
	} // createItems
	
	

	// ---------------------------
	//Check if all items exist, then start auto rotating if set up...
	
	if (hiPerBox > 1) { 
		chkHowMany = Math.ceil(parseInt(darray.length-1) / hiPerBox);
	} else {
		chkHowMany = howManyElements;
	}
	
	function checkIfAllAreLoaded() {
		if (document.getElementById(sl.wrapper+"-slider").getElementsByTagName("li").length == chkHowMany) {
				if (sl.timeDelay > 0) {
					sl.anivar = setTimeout(function(){ swapperMove(sl, 1); }, sl.timeDelay);
				}
		} else {
			setTimeout(function(){checkIfAllAreLoaded()}, 100);
		} 
	}
	checkIfAllAreLoaded();

}

function loadImageSwapper(sl) {

	var hIS = new midoriAjax(function () {
		
		if (hIS.status == 200) {
			
			if (hIS.responseText.match(/!DOCTYPE/i)) {
				sl.loadAttempts = sl.loadAttempts+1;
				loadImageSwapper(sl);
			} else {
			
			
				if ((hIS.responseXML.getElementsByTagName('image').length>0)) {
			
					loadSwapper(this.responseXML,sl);
				
				
				} else {
					sl.loadAttempts = sl.loadAttempts+1;
					loadImageSwapper(sl);
				}
			
			}
			
		}  else {
			//404 or 0 or whatever
			sl.loadAttempts = sl.loadAttempts+1;
			loadImageSwapper(sl);
			
		}

	});


	switch(sl.loadAttempts)
	{
	case 0: //default
	  	if (window.location.href.indexOf("cstvauctions.com") > 0) {
	  		sl.xmlurl = "/schools/" + schoolCode + "/" + sl.xmlurl;
	  	}
		hIS.post(sl.xmlurl, '', 'GET');
	  	break;
	
	case 1: //cstv auctions
	
	  	if (typeof(sportCode) != 'undefined' && typeof(schoolCode) == 'undefined') {
			storeSchool = sportCode; 
		} else {
			storeSchool = schoolCode;
		}

		if (sl.loadAttempts >= 1) {
			hIS.post("/schools/"+storeSchool+sl.xmlurl, '', 'GET');
		}
	
	  	break;
	
	default: //error message

		return;
		break;
		
	}
}